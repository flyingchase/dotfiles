# Configuration for Alacritty, the GPU enhanced terminal emulator.

# Any items in the `env` entry below will be added as
# environment variables. Some entries may override variables
# set by alacritty itself.
env:
  # TERM variable
  #
  # This value is used to set the `$TERM` environment variable for
  # each instance of Alacritty. If it is not present, alacritty will
  # check the local terminfo database and use `alacritty` if it is
  # available, otherwise `xterm-256color` is used.
  TERM: xterm-256color

window:
  # Window dimensions (changes require restart)
  #
  # Specified in number of columns/lines, not pixels.
  # If both are `0`, this setting is ignored.
  dimensions:
    columns: 0
    lines: 0

  # Window position (changes require restart)
  #
  # Specified in number of pixels.
  # If the position is not set, the window manager will handle the placement.
  #position:
  #  x: 0
  #  y: 0
  # Window padding (changes require restart)
  #
  # Blank space added around the window in pixels. This padding is scaled
  # by DPI and the specified value is always added at both opposing sides.
  padding:
    x: 2
    y: 2

  # Spread additional padding evenly around the terminal content.
  dynamic_padding: false

  # Window decorations
  #
  # Values for `decorations`:
  #     - full: Borders and title bar
  #     - none: Neither borders nor title bar
  #
  # Values for `decorations` (macOS only):
  #     - transparent: Title bar, transparent background and title bar buttons
  #     - buttonless: Title bar, transparent background, but no title bar buttons
  decorations: transparent

  # When true, alacritty starts maximized.
  startup_mode: Windowed

scrolling:
  # Maximum number of lines in the scrollback buffer.
  # Specifying '0' will disable scrolling.
  history: 32768

  # Number of lines the viewport will move for every line scrolled when
  # scrollback is enabled (history > 0).
  # Faux Scrolling
  #
  multiplier: 3
  # The `faux_multiplier` setting controls the number of lines the terminal
  # should scroll when the alternate screen buffer is active. This is used
  # to allow mouse scrolling for applications like `man`.
  #
  # Specifying `0` will disable faux scrolling.
  # Scroll to the bottom when new text is written to the terminal.

# Spaces per Tab (changes require restart)
#
# This setting defines the width of a tab in cells.
#
# Some applications, like Emacs, rely on knowing about the width of a tab.
# To prevent unexpected behavior in these applications, it's also required to
# change the `it` value in terminfo when altering this setting.
# Font configuration (changes require restart)
font:
  # Normal (roman) font face
  normal:
    # Font family
    #
    Default: null
    #   - (macOS) Menlo
    #   - (Linux) sourcecodepro 14
    #   - (Windows) Consolas
    family: FiraCode Nerd Font
    style: Retina
    # The `style` can be specified to pick a specific face.
    #style: Regular

  # Bold font face
  bold:
    # Font family
    #
    # If the bold family is not specified, it will fall back to the
    # value specified for the normal font.
    family: FiraCode Nerd Font
    # RobotoMono
    # The `style` can be specified to pick a specific face.
    style: Bold

  # Italic font face
  italic:
    # Font family
    #
    # If the italic family is not specified, it will fall back to the
    # value specified for the normal font.
    family: FiraCode Nerd Font
    # RobotoMono
    # The `style` can be specified to pick a specific face.
    style: Italic

# font  # Point size
  size: 18.0

  # Offset is the extra space around each character. `offset.y` can be thought of
  # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
  offset:
    x: 0
    y: 0

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increasing `x` moves the glyph to the right,
  # increasing `y` moves the glyph upwards.
  glyph_offset:
    x: 0
    y: 0

  # Thin stroke font rendering (macOS only)
  #
  # Thin strokes are suitable for retina displays, but for non-retina screens
  # it is recommended to set `use_thin_strokes` to `false`
  #
  # macOS >= 10.14.x:
  #
  # If the font quality on non-retina display looks bad then set
  # `use_thin_strokes` to `true` and enable font smoothing by running the
  # following command:
  #   `defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO`
  #
  # This is a global setting and will require a log out or restart to take
  # effect.
  use_thin_strokes: true

  debug:
    # display the time it takes to redraw each frame.
    render_timer: true
    # Keep the log file after quitting Alacritty.
    persistent_logging: false

# {{{Color Schemes
schemes:
# {{{ Gruvbox Material Dark
  gruvbox_material_dark: &gruvbox_material_dark
    primary:
      background: '#282828'
      foreground: '#d4be98'

    normal:
      black:   '#282828'
      red:     '#ea6962'
      green:   '#a9b665'
      yellow:  '#d8a657'
      blue:    '#7daea3'
      magenta: '#d3869b'
      cyan:    '#89b482'
      white:   '#d4be98'

    bright:
      black:   '#282828'
      red:     '#ea6962'
      green:   '#a9b665'
      yellow:  '#d8a657'
      blue:    '#7daea3'
      magenta: '#d3869b'
      cyan:    '#89b482'
      white:   '#d4be98'
# }}}
# {{{ Gruvbox Mix Dark
  gruvbox_mix_dark: &gruvbox_mix_dark
    primary:
      background: '#282828'
      foreground: '#e2cca9'

    normal:
      black:   '#504945'
      red:     '#f2594b'
      green:   '#b0b846'
      yellow:  '#e9b143'
      blue:    '#80aa9e'
      magenta: '#d3869b'
      cyan:    '#8bba7f'
      white:   '#e2cca9'

    bright:
      black:   '#504945'
      red:     '#f2594b'
      green:   '#b0b846'
      yellow:  '#e9b143'
      blue:    '#80aa9e'
      magenta: '#d3869b'
      cyan:    '#8bba7f'
      white:   '#e2cca9'
# }}}
# {{{ Gruvbox Material Light
  gruvbox_material_light: &gruvbox_material_light
    primary:
      background: '#f2e5bc'
      foreground: '#654735'

    normal:
      black:   '#654735'
      red:     '#c14a4a'
      green:   '#6c782e'
      yellow:  '#b47109'
      blue:    '#45707a'
      magenta: '#945e80'
      cyan:    '#4c7a5d'
      white:   '#928374'

    bright:
      black:   '#654735'
      red:     '#c14a4a'
      green:   '#6c782e'
      yellow:  '#b47109'
      blue:    '#45707a'
      magenta: '#945e80'
      cyan:    '#4c7a5d'
      white:   '#928374'
# }}}
# {{{ Edge Light
  edge_light: &edge_light
    primary:
      background: '#fafafa'
      foreground: '#4b505b'

    normal:
      black: '#4b505b'
      red: '#d15b5b'
      green: '#608e32'
      yellow: '#be7e05'
      blue: '#5079be'
      magenta: '#b05ccc'
      cyan: '#3a8b84'
      white: '#dde2e7'

    bright:
      black: '#4b505b'
      red: '#d15b5b'
      green: '#608e32'
      yellow: '#be7e05'
      blue: '#5079be'
      magenta: '#b05ccc'
      cyan: '#3a8b84'
      white: '#dde2e7'
# }}}
# {{{ Edge Dark
  edge_dark: &edge_dark
    primary:
      background: '#2b2d37'
      foreground: '#c5cdd9'

    normal:
      black: '#3a3e4e'
      red: '#ec7279'
      green: '#a0c980'
      yellow: '#deb974'
      blue: '#6cb6eb'
      magenta: '#d38aea'
      cyan: '#5dbbc1'
      white: '#c5cdd9'

    bright:
      black: '#3a3e4e'
      red: '#ec7279'
      green: '#a0c980'
      yellow: '#deb974'
      blue: '#6cb6eb'
      magenta: '#d38aea'
      cyan: '#5dbbc1'
      white: '#c5cdd9'
# }}}
# {{{ Everforest Dark
  everforest_dark: &everforest_dark
    primary:
      background: '#2f383e'
      foreground: '#d3c6aa'

    normal:
      black:   '#4b565c'
      red:     '#e67e80'
      green:   '#a7c080'
      yellow:  '#dbbc7f'
      blue:    '#7fbbb3'
      magenta: '#d699b6'
      cyan:    '#83c092'
      white:   '#d3c6aa'

    bright:
      black:   '#4b565c'
      red:     '#e67e80'
      green:   '#a7c080'
      yellow:  '#dbbc7f'
      blue:    '#7fbbb3'
      magenta: '#d699b6'
      cyan:    '#83c092'
      white:   '#d3c6aa'
# }}}
# {{{ Everforest Light
  everforest_light: &everforest_light
    primary:
      background: '#fdf6e3'
      foreground: '#5c6a72'

    normal:
      black:   '#5c6a72'
      red:     '#f85552'
      green:   '#8da101'
      yellow:  '#dfa000'
      blue:    '#3a94c5'
      magenta: '#df69ba'
      cyan:    '#35a77c'
      white:   '#dfddc8'

    bright:
      black:   '#5c6a72'
      red:     '#f85552'
      green:   '#8da101'
      yellow:  '#dfa000'
      blue:    '#3a94c5'
      magenta: '#df69ba'
      cyan:    '#35a77c'
      white:   '#dfddc8'
# }}}
# {{{ Sonokai Default
  sonokai_default: &sonokai_default
    primary:
      background: '#2c2e34'
      foreground: '#e2e2e3'

    normal:
      black: '#181819'
      red: '#fc5d7c'
      green: '#9ed072'
      yellow: '#e7c664'
      blue: '#76cce0'
      magenta: '#b39df3'
      cyan: '#f39660'
      white: '#e2e2e3'

    bright:
      black: '#181819'
      red: '#fc5d7c'
      green: '#9ed072'
      yellow: '#e7c664'
      blue: '#76cce0'
      magenta: '#b39df3'
      cyan: '#f39660'
      white: '#e2e2e3'
# }}}
# {{{ Sonokai Shusia
  sonokai_shusia: &sonokai_shusia
    primary:
      background: '#2d2a2e'
      foreground: '#e3e1e4'

    normal:
      black: '#1a181a'
      red: '#f85e84'
      green: '#9ecd6f'
      yellow: '#e5c463'
      blue: '#7accd7'
      magenta: '#ab9df2'
      cyan: '#ef9062'
      white: '#e3e1e4'

    bright:
      black: '#1a181a'
      red: '#f85e84'
      green: '#9ecd6f'
      yellow: '#e5c463'
      blue: '#7accd7'
      magenta: '#ab9df2'
      cyan: '#ef9062'
      white: '#e3e1e4'
# }}}
# {{{ Sonokai Andromeda
  sonokai_andromeda: &sonokai_andromeda
    primary:
      background: '#2b2d3a'
      foreground: '#e1e3e4'

    normal:
      black: '#181a1c'
      red: '#fb617e'
      green: '#9ed06c'
      yellow: '#edc763'
      blue: '#6dcae8'
      magenta: '#bb97ee'
      cyan: '#f89860'
      white: '#e1e3e4'

    bright:
      black: '#181a1c'
      red: '#fb617e'
      green: '#9ed06c'
      yellow: '#edc763'
      blue: '#6dcae8'
      magenta: '#bb97ee'
      cyan: '#f89860'
      white: '#e1e3e4'
# }}}
# {{{ Sonokai Atlantis
  sonokai_atlantis: &sonokai_atlantis
    primary:
      background: '#2a2f38'
      foreground: '#e1e3e4'

    normal:
      black: '#181a1c'
      red: '#ff6578'
      green: '#9dd274'
      yellow: '#eacb64'
      blue: '#72cce8'
      magenta: '#ba9cf3'
      cyan: '#f69c5e'
      white: '#e1e3e4'

    bright:
      black: '#181a1c'
      red: '#ff6578'
      green: '#9dd274'
      yellow: '#eacb64'
      blue: '#72cce8'
      magenta: '#ba9cf3'
      cyan: '#f69c5e'
      white: '#e1e3e4'
# }}}
# {{{ Sonokai Maia
  sonokai_maia: &sonokai_maia
    primary:
      background: '#273136'
      foreground: '#e1e2e3'

    normal:
      black: '#1c1e1f'
      red: '#f76c7c'
      green: '#9cd57b'
      yellow: '#e3d367'
      blue: '#78cee9'
      magenta: '#baa0f8'
      cyan: '#f3a96a'
      white: '#e1e2e3'

    bright:
      black: '#1c1e1f'
      red: '#f76c7c'
      green: '#9cd57b'
      yellow: '#e3d367'
      blue: '#78cee9'
      magenta: '#baa0f8'
      cyan: '#f3a96a'
      white: '#e1e2e3'
# }}}
# {{{ Sonokai Espresso
  sonokai_espresso: &sonokai_espresso
    primary:
      background: "#312c2b"
      foreground: "#e4e3e1"

    normal:
      black: "#1f1e1c"
      red: "#f86882"
      green: "#a6cd77"
      yellow: "#f0c66f"
      blue: "#81d0c9"
      magenta: "#9fa0e1"
      cyan: "#f08d71"
      white: "#e4e3e1"

    bright:
      black: "#1f1e1c"
      red: "#f86882"
      green: "#a6cd77"
      yellow: "#f0c66f"
      blue: "#81d0c9"
      magenta: "#9fa0e1"
      cyan: "#f08d71"
      white: "#e4e3e1"
# }}}
# {{{ Soft Era
  soft_era: &soft_era
    primary:
      background: '#f9f5f5'
      foreground: '#be9898'

    normal:
      black: '#be9898'
      red: '#f165bd'
      green: '#96ad01'
      yellow: '#ec9157'
      blue: '#75a9d9'
      magenta: '#aea6e1'
      cyan: '#25b7b8'
      white: '#be9898'

    bright:
      black: '#be9898'
      red: '#f165bd'
      green: '#96ad01'
      yellow: '#ec9157'
      blue: '#75a9d9'
      magenta: '#aea6e1'
      cyan: '#25b7b8'
      white: '#be9898'
# }}}
colors: *everforest_dark
bell:
  animation: EaseOutExpo
  duration: 0

  # Background opacity
  #
  # Window opacity as a floating point number from `0.0` to `1.0`.
  # The value `0.0` is completely transparent and `1.0` is opaque.
  background_opacity: 0.85

# Mouse bindings
#
# Available fields:
#   - mouse
#   - action
#   - mods (optional)
#
# Values for `mouse`:
#   - Middle
#   - Left
#   - Right
#   - Numeric identifier such as `5`
#
# All available `mods` and `action` values are documented in the key binding
# section.
mouse_bindings:
  - { mouse: Middle, action: PasteSelection }

mouse:
  # Click settings
  #
  # The `double_click` and `triple_click` settings control the time
  # alacritty should wait for accepting multiple clicks as one double
  # or triple click.
  double_click: { threshold: 300 }
  triple_click: { threshold: 300 }

  # If this is `true`, the cursor is temporarily hidden when typing.
  hide_when_typing: false

  # url:
    # URL launcher
    #
    # This program is executed when clicking on a text which is recognized as a URL.
    # The URL is always added to the command as the last parameter.
    #
    # When set to `None`, URL launching will be disabled completely.
    #
    # Default:
    #   - (macOS) open
    #   - (Linux) xdg-open
    #   - (Windows) explorer
    #launcher:
    #  program: xdg-open
    #  args: []
    # URL modifiers
    #
    # These are the modifiers that need to be held down for opening URLs when clicking
    # on them. The available modifiers are documented in the key binding section.
    # modifiers: None

selection:
  semantic_escape_chars: ",│`|:\"' ()[]{}<>"

  # When set to `true`, selected text will be copied to the primary clipboard.
  save_to_clipboard: true

# Allow terminal applications to change Alacritty's window title.
window.dynamic_title: true

cursor:
  # Cursor style
  #
  # Values for `style`:
  #   - ▇ Block
  #   - _ Underline
  #   - | Beam
  style: Beam

  # If this is `true`, the cursor will be rendered as a hollow box when the
  # window is not focused.
  unfocused_hollow: true

  cursor_blink: true
  cursor_blink_interval: 200

# Live config reload (changes require restart)
live_config_reload: true

# Shell
#
# You can set `shell.program` to the path of your favorite shell, e.g. `/bin/fish`.
# Entries in `shell.args` are passed unmodified as arguments to the shell.
#
# Default:
#   - (Linux/macOS) /bin/bash --login
#   - (Windows) powershell
#shell:
#  program: /bin/bash
#  args:
#    - --login
# Windows 10 ConPTY backend (Windows only)
#
# This will enable better color support and may resolve other issues,
# however this API and its implementation is still young and so is
# disabled by default, as stability may not be as good as the winpty
# backend.
#
# Alacritty will fall back to the WinPTY automatically if the ConPTY
# backend cannot be initialized.
enable_experimental_conpty_backend: false

# Send ESC (\x1b) before characters when alt is pressed.
alt_send_esc: true

# Key bindings
#
# Key bindings are specified as a list of objects. Each binding will specify a
# key and modifiers required to trigger it, terminal modes where the binding is
# applicable, and what should be done when the key binding fires. It can either
# send a byte sequence to the running application (`chars`), execute a
# predefined action (`action`) or fork and execute a specified command plus
# arguments (`command`).
#
# Bindings are always filled by default, but will be replaced when a new binding
# with the same triggers is defined. To unset a default binding, it can be
# mapped to the `None` action.
#
# Example:
#   `- { key: V, mods: Control|Shift, action: Paste }`
#
# Available fields:
#   - key
#   - mods (optional)
#   - chars | action | command (exactly one required)
#   - mode (optional)
#
# Values for `key`:
#   - `A` -> `Z`
#   - `F1` -> `F12`
#   - `Key1` -> `Key0`
#
#   A full list with available key codes can be found here:
#   https://docs.rs/glutin/*/glutin/enum.VirtualKeyCode.html#variants
#
#   Instead of using the name of the keys, the `key` field also supports using
#   the scancode of the desired key. Scancodes have to be specified as a
#   decimal number.
#   This command will allow you to display the hex scancodes for certain keys:
#     `showkey --scancodes`
#
# Values for `mods`:
#   - Command
#   - Control
#   - Super
#   - Shift
#   - Alt
#
#   Multiple `mods` can be combined using `|` like this: `mods: Control|Shift`.
#   Whitespace and capitalization is relevant and must match the example.
#
# Values for `chars`:
#   The `chars` field writes the specified string to the terminal. This makes
#   it possible to pass escape sequences.
#   To find escape codes for bindings like `PageUp` ("\x1b[5~"), you can run
#   the command `showkey -a` outside of tmux.
#   Note that applications use terminfo to map escape sequences back to
#   keys. It is therefore required to update the terminfo when
#   changing an escape sequence.
#
# Values for `action`:
#   - Paste
#   - PasteSelection
#   - Copy
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollLineUp
#   - ScrollLineDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Quit
#   - ClearLogNotice
#   - SpawnNewInstance
#   - None
#
# Values for `command`:
#   The `command` field must be a map containing a `program` string and
#   an `args` array of command line parameter strings.
#
#   Example:
#       `command: { program: "alacritty", args: ["-e", "vttest"] }`
#
# Values for `mode`:
#   - ~AppCursor
#   - AppCursor
#   - ~AppKeypad
#   - AppKeypad
key_bindings:
  # (Windows/Linux only)
  #- { key: V,        mods: Control|Shift, action: Paste            }
  #- { key: C,        mods: Control|Shift, action: Copy             }
  #- { key: Insert,   mods: Shift,         action: PasteSelection   }
  #- { key: Key0,     mods: Control,       action: ResetFontSize    }
  #- { key: Equals,   mods: Control,       action: IncreaseFontSize }
  #- { key: Add,      mods: Control,       action: IncreaseFontSize }
  #- { key: Subtract, mods: Control,       action: DecreaseFontSize }
  #- { key: Minus,    mods: Control,       action: DecreaseFontSize }
  # (macOS only)
  #- { key: Key0,   mods: Command, action: ResetFontSize    }
  #- { key: Equals, mods: Command, action: IncreaseFontSize }
  #- { key: Add,    mods: Command, action: IncreaseFontSize }
  #- { key: Minus,  mods: Command, action: DecreaseFontSize }
  #- { key: K,      mods: Command, action: ClearHistory     }
  #- { key: K,      mods: Command, chars: "\x0c"            }
  #- { key: V,      mods: Command, action: Paste            }
  #- { key: C,      mods: Command, action: Copy             }
  #- { key: H,      mods: Command, action: Hide             }
  #- { key: Q,      mods: Command, action: Quit             }
  #- { key: W,      mods: Command, action: Quit             }
  - { key: Q, mods: Control, action: Quit }
  - { key: L, mods: Control, action: ClearLogNotice }
  - { key: L, mods: Control, chars: "\f" }
  - { key: A,         mods: Alt,       chars: "\x1ba"                       }
  - { key: B,         mods: Alt,       chars: "\x1bb"                       }
  - { key: C,         mods: Alt,       chars: "\x1bc"                       }
  - { key: D,         mods: Alt,       chars: "\x1bd"                       }
  - { key: E,         mods: Alt,       chars: "\x1be"                       }
  - { key: F,         mods: Alt,       chars: "\x1bf"                       }
  - { key: G,         mods: Alt,       chars: "\x1bg"                       }
  - { key: H,         mods: Alt,       chars: "\x1bh"                       }
  - { key: I,         mods: Alt,       chars: "\x1bi"                       }
  - { key: J,         mods: Alt,       chars: "\x1bj"                       }
  - { key: K,         mods: Alt,       chars: "\x1bk"                       }
  - { key: L,         mods: Alt,       chars: "\x1bl"                       }
  - { key: M,         mods: Alt,       chars: "\x1bm"                       }
  - { key: N,         mods: Alt,       chars: "\x1bn"                       }
  - { key: O,         mods: Alt,       chars: "\x1bo"                       }
  - { key: P,         mods: Alt,       chars: "\x1bp"                       }
  - { key: Q,         mods: Alt,       chars: "\x1bq"                       }
  - { key: R,         mods: Alt,       chars: "\x1br"                       }
  - { key: S,         mods: Alt,       chars: "\x1bs"                       }
  - { key: T,         mods: Alt,       chars: "\x1bt"                       }
  - { key: U,         mods: Alt,       chars: "\x1bu"                       }
  - { key: V,         mods: Alt,       chars: "\x1bv"                       }
  - { key: W,         mods: Alt,       chars: "\x1bw"                       }
  - { key: X,         mods: Alt,       chars: "\x1bx"                       }
  - { key: Y,         mods: Alt,       chars: "\x1by"                       }
  - { key: Z,         mods: Alt,       chars: "\x1bz"                       }
  - { key: A,         mods: Alt|Shift, chars: "\x1bA"                       }
  - { key: B,         mods: Alt|Shift, chars: "\x1bB"                       }
  - { key: C,         mods: Alt|Shift, chars: "\x1bC"                       }
  - { key: D,         mods: Alt|Shift, chars: "\x1bD"                       }
  - { key: E,         mods: Alt|Shift, chars: "\x1bE"                       }
  - { key: F,         mods: Alt|Shift, chars: "\x1bF"                       }
  - { key: G,         mods: Alt|Shift, chars: "\x1bG"                       }
  - { key: H,         mods: Alt|Shift, chars: "\x1bH"                       }
  - { key: I,         mods: Alt|Shift, chars: "\x1bI"                       }
  - { key: J,         mods: Alt|Shift, chars: "\x1bJ"                       }
  - { key: K,         mods: Alt|Shift, chars: "\x1bK"                       }
  - { key: L,         mods: Alt|Shift, chars: "\x1bL"                       }
  - { key: M,         mods: Alt|Shift, chars: "\x1bM"                       }
  - { key: N,         mods: Alt|Shift, chars: "\x1bN"                       }
  - { key: O,         mods: Alt|Shift, chars: "\x1bO"                       }
  - { key: P,         mods: Alt|Shift, chars: "\x1bP"                       }
  - { key: Q,         mods: Alt|Shift, chars: "\x1bQ"                       }
  - { key: R,         mods: Alt|Shift, chars: "\x1bR"                       }
  - { key: S,         mods: Alt|Shift, chars: "\x1bS"                       }
  - { key: T,         mods: Alt|Shift, chars: "\x1bT"                       }
  - { key: U,         mods: Alt|Shift, chars: "\x1bU"                       }
  - { key: V,         mods: Alt|Shift, chars: "\x1bV"                       }
  - { key: W,         mods: Alt|Shift, chars: "\x1bW"                       }
  - { key: X,         mods: Alt|Shift, chars: "\x1bX"                       }
  - { key: Y,         mods: Alt|Shift, chars: "\x1bY"                       }
  - { key: Z,         mods: Alt|Shift, chars: "\x1bZ"                       }
  - { key: Key1,      mods: Alt,       chars: "\x1b1"                       }
  - { key: Key2,      mods: Alt,       chars: "\x1b2"                       }
  - { key: Key3,      mods: Alt,       chars: "\x1b3"                       }
  - { key: Key4,      mods: Alt,       chars: "\x1b4"                       }
  - { key: Key5,      mods: Alt,       chars: "\x1b5"                       }
  - { key: Key6,      mods: Alt,       chars: "\x1b6"                       }
  - { key: Key7,      mods: Alt,       chars: "\x1b7"                       }
  - { key: Key8,      mods: Alt,       chars: "\x1b8"                       }
  - { key: Key9,      mods: Alt,       chars: "\x1b9"                       }
  - { key: Key0,      mods: Alt,       chars: "\x1b0"                       }
  - { key: Space,     mods: Control,   chars: "\x00"                        } # Ctrl + Space
  - { key: Grave,     mods: Alt,       chars: "\x1b`"                       } # Alt + `
  - { key: Grave,     mods: Alt|Shift, chars: "\x1b~"                       } # Alt + ~
  - { key: Period,    mods: Alt,       chars: "\x1b."                       } # Alt + .
  - { key: Key8,      mods: Alt|Shift, chars: "\x1b*"                       } # Alt + *
  - { key: Key3,      mods: Alt|Shift, chars: "\x1b#"                       } # Alt + #
  - { key: Period,    mods: Alt|Shift, chars: "\x1b>"                       } # Alt + >
  - { key: Comma,     mods: Alt|Shift, chars: "\x1b<"                       } # Alt + <
  - { key: Minus,     mods: Alt|Shift, chars: "\x1b_"                       } # Alt + _
  - { key: Key5,      mods: Alt|Shift, chars: "\x1b%"                       } # Alt + %
  - { key: Key6,      mods: Alt|Shift, chars: "\x1b^"                       } # Alt + ^
  - { key: Backslash, mods: Alt,       chars: "\x1b\\"                      } # Alt + \
  - { key: Backslash, mods: Alt|Shift, chars: "\x1b|"                       } # Alt + |
